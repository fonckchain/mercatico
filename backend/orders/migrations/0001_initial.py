# Generated by Django 5.0.1 on 2025-10-19 16:53

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "order_number",
                    models.CharField(
                        editable=False,
                        max_length=20,
                        unique=True,
                        verbose_name="número de orden",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pendiente"),
                            ("PAYMENT_PENDING", "Pago pendiente de verificación"),
                            ("CONFIRMED", "Confirmada"),
                            ("PROCESSING", "En proceso"),
                            ("SHIPPED", "Enviado"),
                            ("DELIVERED", "Entregado"),
                            ("CANCELLED", "Cancelado"),
                            ("REFUNDED", "Reembolsado"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="estado",
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="subtotal",
                    ),
                ),
                (
                    "delivery_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="costo de envío",
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="total",
                    ),
                ),
                (
                    "delivery_method",
                    models.CharField(
                        choices=[
                            ("PICKUP", "Recogida local"),
                            ("DELIVERY", "Envío a domicilio"),
                        ],
                        default="DELIVERY",
                        max_length=20,
                        verbose_name="método de entrega",
                    ),
                ),
                (
                    "delivery_address",
                    models.TextField(blank=True, verbose_name="dirección de entrega"),
                ),
                (
                    "delivery_province",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="provincia"
                    ),
                ),
                (
                    "delivery_canton",
                    models.CharField(blank=True, max_length=50, verbose_name="cantón"),
                ),
                (
                    "delivery_district",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="distrito"
                    ),
                ),
                (
                    "delivery_notes",
                    models.TextField(blank=True, verbose_name="notas de entrega"),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("SINPE", "SINPE Móvil"),
                            ("CASH", "Efectivo contra entrega"),
                        ],
                        default="SINPE",
                        max_length=20,
                        verbose_name="método de pago",
                    ),
                ),
                (
                    "payment_verified",
                    models.BooleanField(default=False, verbose_name="pago verificado"),
                ),
                (
                    "payment_verified_at",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="fecha de verificación de pago",
                    ),
                ),
                (
                    "buyer_phone",
                    models.CharField(
                        max_length=17, verbose_name="teléfono del comprador"
                    ),
                ),
                (
                    "buyer_email",
                    models.EmailField(
                        max_length=255, verbose_name="correo del comprador"
                    ),
                ),
                (
                    "buyer_notes",
                    models.TextField(blank=True, verbose_name="notas del comprador"),
                ),
                (
                    "seller_notes",
                    models.TextField(blank=True, verbose_name="notas del vendedor"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="fecha de creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="última actualización"
                    ),
                ),
                (
                    "confirmed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="fecha de confirmación"
                    ),
                ),
                (
                    "shipped_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="fecha de envío"
                    ),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="fecha de entrega"
                    ),
                ),
            ],
            options={
                "verbose_name": "orden",
                "verbose_name_plural": "órdenes",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "product_name",
                    models.CharField(
                        max_length=200, verbose_name="nombre del producto"
                    ),
                ),
                (
                    "product_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="precio unitario",
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="cantidad",
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="subtotal",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="fecha de creación"
                    ),
                ),
            ],
            options={
                "verbose_name": "item de orden",
                "verbose_name_plural": "items de orden",
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderStatusHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pendiente"),
                            ("PAYMENT_PENDING", "Pago pendiente de verificación"),
                            ("CONFIRMED", "Confirmada"),
                            ("PROCESSING", "En proceso"),
                            ("SHIPPED", "Enviado"),
                            ("DELIVERED", "Entregado"),
                            ("CANCELLED", "Cancelado"),
                            ("REFUNDED", "Reembolsado"),
                        ],
                        max_length=20,
                        verbose_name="estado",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notas")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="fecha de cambio"
                    ),
                ),
            ],
            options={
                "verbose_name": "historial de estado",
                "verbose_name_plural": "historiales de estado",
                "ordering": ["order", "-created_at"],
            },
        ),
    ]
