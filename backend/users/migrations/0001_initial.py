# Generated by Django 5.0.1 on 2025-10-19 16:53

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255, unique=True, verbose_name="correo electrónico"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="Número de teléfono costarricense",
                        max_length=17,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El número debe estar en formato: '+50612345678' o '12345678'",
                                regex="^\\+?506?\\d{8}$",
                            )
                        ],
                        verbose_name="teléfono",
                    ),
                ),
                ("first_name", models.CharField(max_length=50, verbose_name="nombre")),
                (
                    "last_name",
                    models.CharField(max_length=50, verbose_name="apellidos"),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[("BUYER", "Comprador"), ("SELLER", "Vendedor")],
                        default="BUYER",
                        max_length=10,
                        verbose_name="tipo de usuario",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="activo")),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="es staff"),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="verificado"),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="fecha de registro",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="último inicio de sesión"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "usuario",
                "verbose_name_plural": "usuarios",
                "ordering": ["-date_joined"],
            },
        ),
        migrations.CreateModel(
            name="BuyerProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="buyer_profile",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "province",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="provincia"
                    ),
                ),
                (
                    "canton",
                    models.CharField(blank=True, max_length=50, verbose_name="cantón"),
                ),
                (
                    "district",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="distrito"
                    ),
                ),
                (
                    "address",
                    models.TextField(blank=True, verbose_name="dirección de entrega"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="fecha de creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="última actualización"
                    ),
                ),
            ],
            options={
                "verbose_name": "perfil de comprador",
                "verbose_name_plural": "perfiles de compradores",
            },
        ),
        migrations.CreateModel(
            name="SellerProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="seller_profile",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "business_name",
                    models.CharField(max_length=100, verbose_name="nombre del negocio"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, max_length=500, verbose_name="descripción"
                    ),
                ),
                (
                    "sinpe_number",
                    models.CharField(
                        help_text="Número de teléfono para recibir pagos SINPE Móvil",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El número SINPE debe estar en formato: '+50612345678' o '12345678'",
                                regex="^\\+?506?\\d{8}$",
                            )
                        ],
                        verbose_name="número SINPE Móvil",
                    ),
                ),
                (
                    "accepts_cash",
                    models.BooleanField(
                        default=False,
                        help_text="Indica si el vendedor acepta pagos en efectivo al momento de la entrega",
                        verbose_name="acepta efectivo contra entrega",
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="seller_logos/",
                        verbose_name="logo/foto",
                    ),
                ),
                (
                    "province",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="provincia"
                    ),
                ),
                (
                    "canton",
                    models.CharField(blank=True, max_length=50, verbose_name="cantón"),
                ),
                (
                    "district",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="distrito"
                    ),
                ),
                (
                    "address",
                    models.TextField(blank=True, verbose_name="dirección exacta"),
                ),
                (
                    "total_sales",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="total de ventas",
                    ),
                ),
                (
                    "rating_avg",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Promedio de calificaciones (0-5)",
                        max_digits=3,
                        verbose_name="calificación promedio",
                    ),
                ),
                (
                    "rating_count",
                    models.IntegerField(
                        default=0, verbose_name="cantidad de calificaciones"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="fecha de creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="última actualización"
                    ),
                ),
            ],
            options={
                "verbose_name": "perfil de vendedor",
                "verbose_name_plural": "perfiles de vendedores",
                "indexes": [
                    models.Index(
                        fields=["business_name"], name="users_selle_busines_8ff2e8_idx"
                    ),
                    models.Index(
                        fields=["province", "canton"],
                        name="users_selle_provinc_9cb52e_idx",
                    ),
                    models.Index(
                        fields=["-rating_avg"], name="users_selle_rating__a7edf8_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="users_user_email_6f2530_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["phone"], name="users_user_phone_9474e8_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["user_type"], name="users_user_user_ty_4573bb_idx"
            ),
        ),
    ]
